Optional: Advanced setState()
Section 22, Lecture 205
Calling setState() in React is asynchronous, for various reasons (mainly performance). Under the covers React will batch multiple calls to setState() into a single call, 
and then re-render the component a single time, rather than re-rendering for every state change.
Therefore the imageUrl parameter would have never worked in our example, because when we called Clarifai with our the predict function, React wasn't finished updating the state. 

One way to go around this issue is to use a callback function:

setState(updater, callback)

Read about it more here (https://reactjs.org/docs/react-component.html#setstate)

1 rem = 16px

// ERROR

If we're coding:

+ onClick={onRouteChange('signin')} // Navigation component

Output: Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. 
React limits the number of nested updates to prevent infinite loops.

=> we don't want to actually run this function. We want it to run whenever 'onClick' happens => using arrow function.
 
+ onClick={() => onRouteChange('signin)}

-------------------------
Difference call function with parentheses/ without parentheses

https://stackoverflow.com/questions/3246928/in-javascript-does-it-make-a-difference-if-i-call-a-function-with-parentheses

